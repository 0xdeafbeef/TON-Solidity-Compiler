.internal-alias :general_purpose,    1

.selector
; s0 - selector (0 (internal message), -1 (external message), -2 (tick tock) or 1 (function call by contract))
; [s1] - function id if s0==1
; [s2] - message id (int, ext) if s0==1
SETCP 0          ; -2
DICTPUSHCONST 32 ; -2 dict 32
PUSH S2          ; -2 dict 32 -2
EQINT 1          ; -2 dict 32 -2==1
PUSHCONT {
	; -2 dict 32
	DICTIGETJMP ; nothing
}
IFNOTJMP
PUSHREFCONT ; funId 1 dict 32 cont
POPCTR c3   ; funId 1 dict 32
ROT         ; funId dict 32 1
DROP        ; funId dict 32
DICTUGETJMP

.globl    ffffffff
.type    ffffffff, @function

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; THE CODE BELOW IS GENERATED. DO NOT CHANGE IT!

.macro abi_encode_packed_macro
; abi_encode_packed_macro
;; param: builder
;; param: arraySize
;; param: dict
;; param: valueLength
; for statement
PUSHINT 0
;; decl: idx
PUSHCONT {
	;; push identifier idx
	DUP
	;; push identifier arraySize
	PUSH S4
	;; <
	LESS
	NOT DUP IFRET DROP
	;; m_isUntil = 1
	;; push identifier valueLength
	PUSH S1
	;; push identifier idx
	PUSH S1
	;; push identifier dict
	PUSH S4
	PUSHINT 32
	DICTUGET
	PUSHCONT { 
		NIP
	}
	PUSHCONT {
		NEWC      ; valueBits builder
		PUSHINT 0 ; valueBits builder 0
		XCHG S2   ; 0 builder valueBits
		STUX      ; builder
		ENDC      ; cell
		CTOS      ; default_value
	}
	IFELSE
	;; push identifier builder
	PUSH S5
	STSLICE
	POP s5
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
	FALSE
}
UNTIL
; erase idx
DROP
; for end
;; return
;; push identifier builder
PUSH S3
XCHG s4
BLKDROP 4
; end abi_encode_packed_macro

.macro deploy_contract_macro
; deploy_contract_macro
;; param: my_contract
;; param: remote_addr
;; param: grams_value
;; param: constuctor_id
;; param: encodedParams
NEWC
;; decl: msg_builder
;; push identifier grams_value
PUSH S3
;; push identifier remote_addr
PUSH S5
PUSHINT 0
; make__CommonMsgInfoRelaxed__int_msg_info__inline
;; param: value
;; param: remote_addr
;; param: bounce
NEWC
;; decl: builder
PUSHINT 1
STUR 2
;; push identifier bounce
PUSH S1
STIR 1
PUSHINT 1
STZEROES
MYADDR
STSLICER
;; push identifier remote_addr
PUSH S2
STSLICER
;; push identifier value
PUSH S3
STGRAMS
PUSHINT 1
STZEROES
PUSHINT 0
STGRAMS
PUSHINT 0
STGRAMS
PUSHINT 64
STZEROES
NOW
STUR 32
;; return
XCHG s3
BLKDROP 3
; end make__CommonMsgInfoRelaxed__int_msg_info__inline
STBR
PUSHINT 1
STONES
;; push identifier my_contract
PUSH S5
;; push identifier msg_builder
PUSH S1
; store_either_for_cell_inline
;; param: x
;; param: builder
;; push identifier x
PUSH S1
CTOS
;; decl: slice_x
;; if
;; push identifier builder
PUSH S1
BREMBITS ; tvm_brembits
;; push identifier slice_x
PUSH S1
SBITS ; tvm_sbits
;; >
GREATER
PUSHCONT {
	;; push identifier builder
	PUSH S1
	PUSHINT 1
	STZEROES
	POP s2
	;; push identifier slice_x
	DUP
	;; push identifier builder
	PUSH S2
	STSLICE
	POP s2
}
PUSHCONT {
	;; push identifier builder
	PUSH S1
	PUSHINT 1
	STONES
	POP s2
	;; push identifier x
	PUSH S2
	;; push identifier builder
	PUSH S2
	STREF
	POP s2
}
IFELSE
;; return
;; push identifier builder
PUSH S1
XCHG s3
BLKDROP 3
; end store_either_for_cell_inline
; expValue
; end expValue
; colValue
NIP
; end colValue
NEWC
;; decl: body_builder
;; push identifier constuctor_id
PUSH S3
STUR 32
;; push identifier encodedParams
PUSH S2
STBR
;; push identifier body_builder
DUP
;; push identifier msg_builder
PUSH S2
; store_either_for_builder_inline
;; param: x
;; param: builder
;; if
;; push identifier builder
DUP
BREMBITS ; tvm_brembits
;; push identifier x
PUSH S2
BBITS
;; >
GREATER
PUSHCONT {
	PUSHINT 1
	STZEROES
	;; push identifier x
	PUSH S1
	STBR
}
PUSHCONT {
	PUSHINT 1
	STONES
	;; push identifier x
	PUSH S1
	STBREFR
}
IFELSE
;; return
NIP
; end store_either_for_builder_inline
; expValue
; end expValue
; colValue
POP s2
; end colValue
;; push identifier msg_builder
PUSH S1
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 7
; end deploy_contract_macro

.macro deploy_contract2_macro
; deploy_contract2_macro
;; param: my_contract
;; param: remote_addr
;; param: grams
;; param: payload
NEWC
;; decl: msg_builder
;; push identifier grams
PUSH S2
;; push identifier remote_addr
PUSH S4
PUSHINT 0
; make__CommonMsgInfoRelaxed__int_msg_info__inline
;; param: value
;; param: remote_addr
;; param: bounce
NEWC
;; decl: builder
PUSHINT 1
STUR 2
;; push identifier bounce
PUSH S1
STIR 1
PUSHINT 1
STZEROES
MYADDR
STSLICER
;; push identifier remote_addr
PUSH S2
STSLICER
;; push identifier value
PUSH S3
STGRAMS
PUSHINT 1
STZEROES
PUSHINT 0
STGRAMS
PUSHINT 0
STGRAMS
PUSHINT 64
STZEROES
NOW
STUR 32
;; return
XCHG s3
BLKDROP 3
; end make__CommonMsgInfoRelaxed__int_msg_info__inline
STBR
PUSHINT 1
STONES
;; push identifier my_contract
PUSH S4
;; push identifier msg_builder
PUSH S1
; store_either_for_cell_inline
;; param: x
;; param: builder
;; push identifier x
PUSH S1
CTOS
;; decl: slice_x
;; if
;; push identifier builder
PUSH S1
BREMBITS ; tvm_brembits
;; push identifier slice_x
PUSH S1
SBITS ; tvm_sbits
;; >
GREATER
PUSHCONT {
	;; push identifier builder
	PUSH S1
	PUSHINT 1
	STZEROES
	POP s2
	;; push identifier slice_x
	DUP
	;; push identifier builder
	PUSH S2
	STSLICE
	POP s2
}
PUSHCONT {
	;; push identifier builder
	PUSH S1
	PUSHINT 1
	STONES
	POP s2
	;; push identifier x
	PUSH S2
	;; push identifier builder
	PUSH S2
	STREF
	POP s2
}
IFELSE
;; return
;; push identifier builder
PUSH S1
XCHG s3
BLKDROP 3
; end store_either_for_cell_inline
; expValue
; end expValue
; colValue
NIP
; end colValue
;; push identifier payload
PUSH S1
;; push identifier msg_builder
PUSH S1
; store_either_for_cell_inline
;; param: x
;; param: builder
;; push identifier x
PUSH S1
CTOS
;; decl: slice_x
;; if
;; push identifier builder
PUSH S1
BREMBITS ; tvm_brembits
;; push identifier slice_x
PUSH S1
SBITS ; tvm_sbits
;; >
GREATER
PUSHCONT {
	;; push identifier builder
	PUSH S1
	PUSHINT 1
	STZEROES
	POP s2
	;; push identifier slice_x
	DUP
	;; push identifier builder
	PUSH S2
	STSLICE
	POP s2
}
PUSHCONT {
	;; push identifier builder
	PUSH S1
	PUSHINT 1
	STONES
	POP s2
	;; push identifier x
	PUSH S2
	;; push identifier builder
	PUSH S2
	STREF
	POP s2
}
IFELSE
;; return
;; push identifier builder
PUSH S1
XCHG s3
BLKDROP 3
; end store_either_for_cell_inline
; expValue
; end expValue
; colValue
NIP
; end colValue
;; push identifier msg_builder
DUP
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 5
; end deploy_contract2_macro

.macro insert_pubkey_macro
; insert_pubkey_macro
;; param: my_contract
;; param: pubkey
;; push identifier my_contract
PUSH S1
CTOS
;; decl: slice
NEWC
;; decl: builder
;; if
;; push identifier slice
PUSH S1
LDU 1
POP s3
ISZERO
PUSHCONT {
	PUSHINT 1
	STZEROES
}
PUSHCONT {
	PUSHINT 1
	STONES
	;; push identifier slice
	PUSH S1
	LDU 32
	POP s3
	STUR 32
}
IFELSE
;; if
;; push identifier slice
PUSH S1
LDU 1
POP s3
ISZERO
PUSHCONT {
	PUSHINT 1
	STZEROES
}
PUSHCONT {
	PUSHINT 1
	STONES
	;; push identifier slice
	PUSH S1
	LDU 2
	POP s3
	STUR 2
}
IFELSE
;; if
;; push identifier slice
PUSH S1
LDU 1
POP s3
ISZERO
PUSHCONT {
	PUSHINT 1
	STZEROES
}
PUSHCONT {
	PUSHINT 1
	STONES
	;; push identifier slice
	PUSH S1
	LDREF
	POP s3
	STREFR
}
IFELSE
;; if
;; push identifier slice
PUSH S1
LDU 1
POP s3
NEQINT 1
PUSHCONT {
	PUSHINT 55
	THROWANY
}
IF
PUSHINT 1
STONES
NEWC
;; decl: key_builder
;; push identifier pubkey
PUSH S3
STUR 256
;; push identifier slice
PUSH S2
LDREF
POP s4
CTOS
;; decl: data
LDDICT
SWAP
;; decl: dict
;; push identifier key_builder
PUSH S2
PUSHINT 0
;; push identifier dict
PUSH S2
PUSHINT 64
DICTUSETB
NIP
NEWC
;; decl: dict_builder
;; push identifier dict
PUSH S1
SWAP
STDICT
;; push identifier dict_builder
DUP
ENDC
;; push identifier builder
PUSH S5
STREF
POP s5
;; if
;; push identifier slice
PUSH S5
LDU 1
POP s7
ISZERO
PUSHCONT {
	;; push identifier builder
	PUSH S4
	PUSHINT 1
	STZEROES
	POP s5
}
PUSHCONT {
	;; push identifier builder
	PUSH S4
	PUSHINT 1
	STONES
	POP s5
	;; push identifier slice
	PUSH S5
	LDREF
	POP s7
	;; push identifier builder
	PUSH S5
	STREF
	POP s5
}
IFELSE
;; return
;; push identifier builder
PUSH S4
ENDC
XCHG s8
BLKDROP 8
; end insert_pubkey_macro

.macro build_state_init_macro
; build_state_init_macro
;; param: code
;; param: data
NEWC
;; decl: builder
PUSHINT 2
STZEROES
PUSHINT 1
STONES
;; push identifier code
PUSH S2
STREFR
PUSHINT 1
STONES
;; push identifier data
PUSH S1
STREFR
PUSHINT 1
STZEROES
;; return
;; push identifier builder
DUP
ENDC
XCHG s3
BLKDROP 3
; end build_state_init_macro

.macro send_internal_message_macro
; send_internal_message_macro
;; param: grams_value
;; param: remote_addr
;; param: body
NEWC
;; decl: msg_builder
;; push identifier grams_value
PUSH S3
;; push identifier remote_addr
PUSH S3
PUSHINT -1
; make__CommonMsgInfoRelaxed__int_msg_info__inline
;; param: value
;; param: remote_addr
;; param: bounce
NEWC
;; decl: builder
PUSHINT 1
STUR 2
;; push identifier bounce
PUSH S1
STIR 1
PUSHINT 1
STZEROES
MYADDR
STSLICER
;; push identifier remote_addr
PUSH S2
STSLICER
;; push identifier value
PUSH S3
STGRAMS
PUSHINT 1
STZEROES
PUSHINT 0
STGRAMS
PUSHINT 0
STGRAMS
PUSHINT 64
STZEROES
NOW
STUR 32
;; return
XCHG s3
BLKDROP 3
; end make__CommonMsgInfoRelaxed__int_msg_info__inline
STBR
PUSHINT 0
STUR 1
;; push identifier body
PUSH S1
;; push identifier msg_builder
PUSH S1
; store_either_for_builder_inline
;; param: x
;; param: builder
;; if
;; push identifier builder
DUP
BREMBITS ; tvm_brembits
;; push identifier x
PUSH S2
BBITS
;; >
GREATER
PUSHCONT {
	PUSHINT 1
	STZEROES
	;; push identifier x
	PUSH S1
	STBR
}
PUSHCONT {
	PUSHINT 1
	STONES
	;; push identifier x
	PUSH S1
	STBREFR
}
IFELSE
;; return
NIP
; end store_either_for_builder_inline
; expValue
; end expValue
; colValue
NIP
; end colValue
;; push identifier msg_builder
DUP
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 4
; end send_internal_message_macro

.macro make_std_address_with_wid_macro
; make_std_address_with_wid_macro
;; param: _wid
;; param: _address
NEWC
;; decl: builder
PUSHINT 4
STUR 3
;; push identifier _wid
PUSH S2
STIR 8
;; push identifier _address
PUSH S1
STUR 256
;; return
;; push identifier builder
DUP
ENDC
CTOS
XCHG s3
BLKDROP 3
; end make_std_address_with_wid_macro

.macro make_std_address_with_zero_wid_macro
; make_std_address_with_zero_wid_macro
;; param: _address
NEWC
;; decl: builder
PUSHINT 1024
STUR 11
;; push identifier _address
PUSH S1
STUR 256
;; return
;; push identifier builder
DUP
ENDC
CTOS
NIP
NIP
; end make_std_address_with_zero_wid_macro

.macro send_accurate_internal_message_macro
; send_accurate_internal_message_macro
;; param: remote_addr
;; param: grams_value
;; param: bounce
;; param: sendrawmsg_flag
NEWC
;; decl: builder
PUSHINT 1
STUR 2
;; push identifier bounce
PUSH S2
STIR 1
PUSHINT 1
STZEROES
MYADDR
STSLICER
;; push identifier remote_addr
PUSH S4
STSLICER
;; push identifier grams_value
PUSH S3
STGRAMS
PUSHINT 1
STZEROES
PUSHINT 0
STGRAMS
PUSHINT 0
STGRAMS
PUSHINT 64
STZEROES
NOW
STUR 32
PUSHINT 2
STZEROES
;; push identifier builder
DUP
ENDC
;; push identifier sendrawmsg_flag
PUSH S2
SENDRAWMSG
BLKDROP 5
; end send_accurate_internal_message_macro

.macro send_accurate_internal_message_with_body_macro
; send_accurate_internal_message_with_body_macro
;; param: remote_addr
;; param: grams_value
;; param: bounce
;; param: sendrawmsg_flag
;; param: body
NEWC
;; decl: builder
PUSHINT 1
STUR 2
;; push identifier bounce
PUSH S3
STIR 1
PUSHINT 1
STZEROES
MYADDR
STSLICER
;; push identifier remote_addr
PUSH S5
STSLICER
;; push identifier grams_value
PUSH S4
STGRAMS
PUSHINT 1
STZEROES
PUSHINT 0
STGRAMS
PUSHINT 0
STGRAMS
PUSHINT 64
STZEROES
NOW
STUR 32
PUSHINT 1
STZEROES
;; push identifier body
PUSH S1
;; push identifier builder
PUSH S1
; store_either_for_cell_inline
;; param: x
;; param: builder
;; push identifier x
PUSH S1
CTOS
;; decl: slice_x
;; if
;; push identifier builder
PUSH S1
BREMBITS ; tvm_brembits
;; push identifier slice_x
PUSH S1
SBITS ; tvm_sbits
;; >
GREATER
PUSHCONT {
	;; push identifier builder
	PUSH S1
	PUSHINT 1
	STZEROES
	POP s2
	;; push identifier slice_x
	DUP
	;; push identifier builder
	PUSH S2
	STSLICE
	POP s2
}
PUSHCONT {
	;; push identifier builder
	PUSH S1
	PUSHINT 1
	STONES
	POP s2
	;; push identifier x
	PUSH S2
	;; push identifier builder
	PUSH S2
	STREF
	POP s2
}
IFELSE
;; return
;; push identifier builder
PUSH S1
XCHG s3
BLKDROP 3
; end store_either_for_cell_inline
; expValue
; end expValue
; colValue
NIP
; end colValue
;; push identifier builder
DUP
ENDC
;; push identifier sendrawmsg_flag
PUSH S3
SENDRAWMSG
BLKDROP 6
; end send_accurate_internal_message_with_body_macro

.macro push_persistent_data_from_c4_to_c7_macro
; push_persistent_data_from_c4_to_c7_macro
PUSHINT 0
;; decl: dict
PUSHROOT
CTOS
;; decl: cellTree
LDDICT
SWAP
; expValue
; end expValue
; colValue
POP s2
; end colValue
;; push identifier cellTree
DUP
LDSLICE 129
POP s2
;; decl: time_int_flag
PUSHCTR c7
;; decl: c7
;; push identifier cellTree
PUSH S2
TPUSH
;; push identifier dict
PUSH S3
TPUSH
;; push identifier time_int_flag
PUSH S1
TPUSH
;; push identifier c7
DUP
POPCTR c7
BLKDROP 4
; end push_persistent_data_from_c4_to_c7_macro

.macro push_persistent_data_from_c7_to_c4_macro
; push_persistent_data_from_c7_to_c4_macro
NEWC
;; decl: c4_builder
PUSHCTR c7
INDEX 2
SWAP
STDICT
PUSHCTR c7
INDEX 3
STSLICER
PUSHCTR c7
INDEX 1
STSLICER
;; push identifier c4_builder
DUP
ENDC
POPROOT
DROP
; end push_persistent_data_from_c7_to_c4_macro

.macro send_external_message_macro
; send_external_message_macro
;; param: body
NEWC
;; decl: builder
PUSHINT 3
STUR 2
MYADDR
STSLICER
PUSHINT 2
STZEROES
LTIME
STUR 64
PUSHINT 33
STZEROES
;; if
;; push identifier builder
DUP
BREMBITS ; tvm_brembits
;; push identifier body
PUSH S2
BBITS
;; >
GREATER
PUSHCONT {
	PUSHINT 1
	STZEROES
	;; push identifier body
	PUSH S1
	STBR
}
PUSHCONT {
	PUSHINT 1
	STONES
	;; push identifier body
	PUSH S1
	STBREFR
}
IFELSE
;; push identifier builder
DUP
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end send_external_message_macro

.macro send_external_message_with_dest_macro
; send_external_message_with_dest_macro
;; param: dest
;; param: body
NEWC
;; decl: builder
PUSHINT 3
STUR 2
MYADDR
STSLICER
;; push identifier dest
PUSH S2
STSLICER
LTIME
STUR 64
PUSHINT 33
STZEROES
;; if
;; push identifier builder
DUP
BREMBITS ; tvm_brembits
;; push identifier body
PUSH S2
BBITS
;; >
GREATER
PUSHCONT {
	PUSHINT 1
	STZEROES
	;; push identifier body
	PUSH S1
	STBR
}
PUSHCONT {
	PUSHINT 1
	STONES
	;; push identifier body
	PUSH S1
	STBREFR
}
IFELSE
;; push identifier builder
DUP
ENDC
PUSHINT 1
SENDRAWMSG
BLKDROP 3
; end send_external_message_with_dest_macro

.macro make_address_macro
; make_address_macro
;; param: wid
;; param: addr
NEWC
;; decl: builder
PUSHINT 4
STUR 3
;; push identifier wid
PUSH S2
STIR 8
;; push identifier addr
PUSH S1
STUR 256
;; return
;; push identifier builder
DUP
ENDC
CTOS
XCHG s3
BLKDROP 3
; end make_address_macro

.macro unpack_address_macro
; unpack_address_macro
;; param: slice
;; push identifier slice
DUP
PARSEMSGADDR
;; decl: tuple
;; if
;; push identifier tuple
DUP
FIRST
NEQINT 2
PUSHCONT {
	PUSHINT 53
	THROWANY
}
IF
;; return
;; push identifier tuple
DUP
THIRD
;; push identifier tuple
PUSH S1
INDEX 3
PLDU 256
SWAP2
DROP2
; end unpack_address_macro

.macro get_rand_seed_macro
; get_rand_seed_macro
;; return
GETPARAM 6
; end get_rand_seed_macro

.macro get_contract_balance_macro
; get_contract_balance_macro
;; return
GETPARAM 7
FIRST
; end get_contract_balance_macro

.internal-alias :main_internal,        0
.internal	:main_internal
PUSHINT 0 ; selector
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: 
;; param: 
;; param: inbound_message
;; param: msg_body_slice
;; param: 
;; push identifier inbound_message
PUSH S2
CTOS
; expValue
; end expValue
; colValue
POP s3
; end colValue
;; push identifier inbound_message
PUSH S2
PUSHINT 3
SDSKIPFIRST
PLDU 1
;; decl: bounced
;; if
;; push identifier msg_body_slice
PUSH S2
SEMPTY
PUSHCONT {
	;; if
	;; push identifier bounced
	DUP
	EQINT 0
	PUSHCONT {
		;; push identifier msg_body_slice
		PUSH S2
		PUSHINT $fallback$
		JMP 1
		;; return
		BLKDROP 6
		RET
	}
	IFJMP
	;; return
	BLKDROP 6
	RET
}
IFJMP
;; push identifier msg_body_slice
PUSH S2
LDU 32
POP s4
;; decl: func_id
;; if
;; push identifier bounced
PUSH S1
EQINT 1
PUSHCONT {
	;; push identifier func_id
	DUP
	PUSHINT $onBounce$
	JMP 1
	;; return
	BLKDROP 7
	RET
}
IFJMP
;; push identifier msg_body_slice
PUSH S3
;; push identifier func_id
PUSH S1
JMP 1
BLKDROP 7

.internal-alias :main_external,        -1
.internal	:main_external

PUSHINT -1 ; main_external trans id
PUSH s1    ; originMsgBodySlice
LDREFRTOS  ; msgBodySlice signSlice
DUP        ; msgBodySlice signSlice signSlice
SDEMPTY    ; msgBodySlice signSlice isSignSliceEmpty
PUSHCONT {
	PUSHINT 0; msgBodySlice signSlice pubKey
}
PUSHCONT {
	DUP          ; msgBodySlice signSlice signSlice
	PUSHINT 512  ; msgBodySlice signSlice signSlice 512
	SDSKIPFIRST  ; msgBodySlice signSlice signSlice'
	PLDU 256     ; msgBodySlice signSlice pubKey
	PUSH s2      ; msgBodySlice signSlice pubKey msgBodySlice
	HASHSU       ; msgBodySlice signSlice pubKey msgHash
	PUSH2 s2,s1  ; msgBodySlice signSlice pubKey msgHash signSlice pubKey
	CHKSIGNU     ; msgBodySlice signSlice pubKey isSigned
	THROWIFNOT 40
}
IFELSE

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_external
;; param: 
;; param: 
;; param: 
;; param: 
;; param: 
;; param: msg_body_slice
;; param: 
;; param: 
;; push identifier msg_body_slice
PUSH S2
LDU 32
LDU 64
POP s5
;; decl: func_id
;; decl: msg_timestamp
;; if
;; push identifier msg_timestamp
DUP
; replay_prot_inline
;; param: msg_timestamp
PUSHINT 0
;; decl: dict
PUSHINT 0
;; decl: previous_message_timestamp
PUSHINT 0
;; decl: interval
PUSHROOT
CTOS
;; decl: c4
LDDICT
SWAP
; expValue
; end expValue
; colValue
POP s4
; end colValue
;; if
;; push identifier c4
DUP
PUSHINT 128
SCHKBITSQ
PUSHCONT {
	LDU 64
	SWAP
	; expValue
	; end expValue
	; colValue
	POP s3
	; end colValue
	LDU 64
	SWAP
	; expValue
	; end expValue
	; colValue
	POP s2
	; end colValue
}
PUSHCONT {
	PUSHINT 1800000
	; expValue
	; end expValue
	; colValue
	POP s2
	; end colValue
}
IFELSE
FALSE
;; decl: result
;; if
;; push identifier previous_message_timestamp
PUSH S3
;; push identifier msg_timestamp
PUSH S6
;; <
LESS
PUSHCONT {
	;; if
	;; push identifier msg_timestamp
	PUSH S5
	NOW
	PUSHINT 1000
	;; *
	MUL
	;; push identifier interval
	PUSH S4
	;; +
	ADD
	;; <
	LESS
	PUSHCONT {
		NEWC
		;; decl: c4_builder
		;; push identifier dict
		PUSH S5
		SWAP
		STDICT
		;; push identifier msg_timestamp
		PUSH S6
		STUR 64
		;; push identifier interval
		PUSH S3
		STUR 64
		;; push identifier c4
		PUSH S2
		STSLICER
		;; push identifier c4_builder
		DUP
		ENDC
		POPROOT
		TRUE
		; expValue
		; end expValue
		; colValue
		POP s2
		; end colValue
		;; drop locals
		DROP
	}
	IF
}
IF
;; return
XCHG s5
BLKDROP 5
; end replay_prot_inline
PUSHCONT {
	;; push identifier msg_body_slice
	PUSH S4
	;; push identifier func_id
	PUSH S2
	JMP 1
	;; return
	BLKDROP 10
	RET
}
IFJMP
PUSHINT 52
THROWANY
BLKDROP 10

.macro my_pubkey_macro
; my_pubkey_macro
;; return
PUSHINT 0
PUSHCTR c7
INDEX 2
PUSHINT 64
DICTUGET
THROWIFNOT 10
PLDU 256
; end my_pubkey_macro

.macro sender_address_macro
; sender_address_macro
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; decl: sender_address
;; if
DEPTH
PUSHINT 5
SUB
PICK
EQINT 0
PUSHCONT {
	DEPTH
	PUSHINT 3
	SUB
	PICK
	PUSHINT 4
	SDSKIPFIRST
	LDMSGADDR
	DROP
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
IF
;; return
; end sender_address_macro

.macro sender_pubkey_macro
; sender_pubkey_macro
PUSHINT 0
;; decl: pubkey
;; if
DEPTH
PUSHINT 5
SUB
PICK
PUSHINT -1
;; ==
EQUAL
PUSHCONT {
	DEPTH
	PUSHINT 8
	SUB
	PICK
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
IF
;; return
; end sender_pubkey_macro

.macro message_balance_macro
; message_balance_macro
;; ret param: balance
PUSHINT 0
;; if
DEPTH
PUSHINT 5
SUB
PICK
EQINT 0
PUSHCONT {
	DEPTH
	PUSHINT 2
	SUB
	PICK
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
IF
;; returning named params
; end message_balance_macro

.macro address2uint_macro
; address2uint_macro
;; param: slice
;; push identifier slice
DUP
PARSEMSGADDR
INDEX 3
;; decl: addr
;; return
;; push identifier addr
DUP
;; push identifier addr
PUSH S1
SBITS ; tvm_sbits
PLDUX
NIP
NIP
; end address2uint_macro

